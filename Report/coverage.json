{
  "SolidityCompilerVersion": "0.4.25",
  "SourceFileMaps": [
    {
      "IndexHtmlFilePath": "../index.html",
      "SolidityCompilerVersion": "0.4.25",
      "SourceFileIndex": 0,
      "SourceFilePath": "aclContract.sol",
      "SourceFileName": "aclContract.sol",
      "SourceFileDirectory": "",
      "SourceHashSha256": "995E802F4889146D361A789516159C3C1CE9574CA28E34E354E9F6A0A026F6A2",
      "SourceFileLines": [
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 1,
          "LiteralSourceCodeLine": "pragma solidity 0.4.25;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 0,
          "OffsetEnd": 23,
          "Length": 23
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 2,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 24,
          "OffsetEnd": 24,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 3,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 25,
          "OffsetEnd": 25,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 4,
          "LiteralSourceCodeLine": "contract aclContract {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 26,
          "OffsetEnd": 48,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 5,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 49,
          "OffsetEnd": 53,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 6,
          "LiteralSourceCodeLine": "    address public owner;     ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 54,
          "OffsetEnd": 84,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 7,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 85,
          "OffsetEnd": 85,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 8,
          "LiteralSourceCodeLine": "    address[] public users;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 86,
          "OffsetEnd": 113,
          "Length": 27
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 9,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 114,
          "OffsetEnd": 114,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 10,
          "LiteralSourceCodeLine": "    event LogAccess(address indexed by, uint indexed accessTime, string method, string desc);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 115,
          "OffsetEnd": 208,
          "Length": 93
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 11,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 209,
          "OffsetEnd": 209,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 12,
          "LiteralSourceCodeLine": "    constructor() public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 210,
          "OffsetEnd": 236,
          "Length": 26
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 13,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 237,
          "OffsetEnd": 241,
          "Length": 4
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 14,
          "LiteralSourceCodeLine": "        owner = msg.sender;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 242,
          "OffsetEnd": 269,
          "Length": 27
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 15,
          "LiteralSourceCodeLine": "        users.push(owner);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 270,
          "OffsetEnd": 296,
          "Length": 26
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 16,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 297,
          "OffsetEnd": 302,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 17,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 303,
          "OffsetEnd": 303,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 18,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 304,
          "OffsetEnd": 304,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 19,
          "LiteralSourceCodeLine": "    function addUser(address user) public{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 305,
          "OffsetEnd": 347,
          "Length": 42
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 20,
          "LiteralSourceCodeLine": "        if (msg.sender != owner) revert(\"Adding A user failed\");",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "else",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 348,
          "OffsetEnd": 412,
          "Length": 64
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 21,
          "LiteralSourceCodeLine": "        users.push(user);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 413,
          "OffsetEnd": 438,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 22,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 439,
          "OffsetEnd": 439,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 23,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 440,
          "OffsetEnd": 445,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 24,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 446,
          "OffsetEnd": 446,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 25,
          "LiteralSourceCodeLine": "    function getUserByIndex(uint i) public returns (address){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 447,
          "OffsetEnd": 508,
          "Length": 61
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 26,
          "LiteralSourceCodeLine": "        return users[i];",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 509,
          "OffsetEnd": 533,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 27,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 534,
          "OffsetEnd": 534,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 28,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 535,
          "OffsetEnd": 540,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 29,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 541,
          "OffsetEnd": 541,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 30,
          "LiteralSourceCodeLine": "    function getUserCount() public returns (uint){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 542,
          "OffsetEnd": 592,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 31,
          "LiteralSourceCodeLine": "        return users.length;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 593,
          "OffsetEnd": 621,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 32,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 622,
          "OffsetEnd": 622,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 33,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 623,
          "OffsetEnd": 628,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 34,
          "LiteralSourceCodeLine": "   ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 629,
          "OffsetEnd": 632,
          "Length": 3
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 35,
          "LiteralSourceCodeLine": "    function deleteIthUser(uint i) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 633,
          "OffsetEnd": 676,
          "Length": 43
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 36,
          "LiteralSourceCodeLine": "        if (msg.sender != owner) revert(\"Deleting user failed\");",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 677,
          "OffsetEnd": 741,
          "Length": 64
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 37,
          "LiteralSourceCodeLine": "        delete users[i];",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 742,
          "OffsetEnd": 766,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 38,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 767,
          "OffsetEnd": 767,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 39,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 768,
          "OffsetEnd": 773,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 40,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 774,
          "OffsetEnd": 774,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 41,
          "LiteralSourceCodeLine": "    function isUser(address candidate, string method) public returns (bool){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 775,
          "OffsetEnd": 851,
          "Length": 76
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 42,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 852,
          "OffsetEnd": 852,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 43,
          "LiteralSourceCodeLine": "        for(uint8 i = 0; i < users.length; i++){",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 853,
          "OffsetEnd": 901,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 44,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 902,
          "OffsetEnd": 902,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 45,
          "LiteralSourceCodeLine": "            if (users[i] == candidate){               ",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 903,
          "OffsetEnd": 957,
          "Length": 54
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 46,
          "LiteralSourceCodeLine": "                LogAccess(candidate, now, method, \"Successful access\");",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 958,
          "OffsetEnd": 1029,
          "Length": 71
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 47,
          "LiteralSourceCodeLine": "                return true;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1030,
          "OffsetEnd": 1058,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 48,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1059,
          "OffsetEnd": 1059,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 49,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1060,
          "OffsetEnd": 1073,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 50,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1074,
          "OffsetEnd": 1074,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 51,
          "LiteralSourceCodeLine": "        }      ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1075,
          "OffsetEnd": 1090,
          "Length": 15
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 52,
          "LiteralSourceCodeLine": "        LogAccess(candidate, now,method,  \"Failed access\");",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1091,
          "OffsetEnd": 1150,
          "Length": 59
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 53,
          "LiteralSourceCodeLine": "        return false;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1151,
          "OffsetEnd": 1172,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 54,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1173,
          "OffsetEnd": 1173,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 55,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1174,
          "OffsetEnd": 1179,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 56,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1180,
          "OffsetEnd": 1180,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 57,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1181,
          "OffsetEnd": 1182,
          "Length": 1
        }
      ],
      "LineCount": 14,
      "LineCoveredCount": 10,
      "LineCoveragePercent": 71.43,
      "BranchCount": 6,
      "BranchCoveredCount": 2,
      "BranchCoveragePercent": 33.33,
      "FunctionCount": 6,
      "FunctionCoveredCount": 5,
      "FunctionCoveragePercent": 83.33
    },
    {
      "IndexHtmlFilePath": "../index.html",
      "SolidityCompilerVersion": "0.4.25",
      "SourceFileIndex": 1,
      "SourceFilePath": "patientContract.sol",
      "SourceFileName": "patientContract.sol",
      "SourceFileDirectory": "",
      "SourceHashSha256": "DD3281870ABF189DB17612474A53DC301BA74F429600E2C4B618EAB9C906C66B",
      "SourceFileLines": [
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 1,
          "LiteralSourceCodeLine": "pragma solidity 0.4.25;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 0,
          "OffsetEnd": 23,
          "Length": 23
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 2,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 24,
          "OffsetEnd": 24,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 3,
          "LiteralSourceCodeLine": "import \"./aclContract.sol\";",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 25,
          "OffsetEnd": 52,
          "Length": 27
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 4,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 53,
          "OffsetEnd": 53,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 5,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 54,
          "OffsetEnd": 54,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 6,
          "LiteralSourceCodeLine": "contract patientContract is aclContract {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 55,
          "OffsetEnd": 96,
          "Length": 41
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 7,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 97,
          "OffsetEnd": 97,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 8,
          "LiteralSourceCodeLine": "    uint constant active = 1;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 98,
          "OffsetEnd": 127,
          "Length": 29
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 9,
          "LiteralSourceCodeLine": "    uint constant pending = 2;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 128,
          "OffsetEnd": 158,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 10,
          "LiteralSourceCodeLine": "    uint constant deleted = 3;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 159,
          "OffsetEnd": 189,
          "Length": 30
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 11,
          "LiteralSourceCodeLine": "    uint public count = 0;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 190,
          "OffsetEnd": 216,
          "Length": 26
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 12,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 217,
          "OffsetEnd": 217,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 13,
          "LiteralSourceCodeLine": "    struct Patient{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 218,
          "OffsetEnd": 237,
          "Length": 19
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 14,
          "LiteralSourceCodeLine": "        uint id;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 238,
          "OffsetEnd": 254,
          "Length": 16
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 15,
          "LiteralSourceCodeLine": "        string name;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 255,
          "OffsetEnd": 275,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 16,
          "LiteralSourceCodeLine": "        uint dateOfBirth;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 276,
          "OffsetEnd": 301,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 17,
          "LiteralSourceCodeLine": "        uint social;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 302,
          "OffsetEnd": 322,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 18,
          "LiteralSourceCodeLine": "        uint status;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 323,
          "OffsetEnd": 343,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 19,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 344,
          "OffsetEnd": 349,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 20,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 350,
          "OffsetEnd": 350,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 21,
          "LiteralSourceCodeLine": "    mapping (uint => Patient) Patients;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 351,
          "OffsetEnd": 390,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 22,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 391,
          "OffsetEnd": 395,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 23,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 396,
          "OffsetEnd": 396,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 24,
          "LiteralSourceCodeLine": "    function updatePatient(uint index, string name) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 397,
          "OffsetEnd": 457,
          "Length": 60
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 25,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 458,
          "OffsetEnd": 458,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 26,
          "LiteralSourceCodeLine": "        if (isUser(msg.sender, \"updatePatient\")) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 459,
          "OffsetEnd": 509,
          "Length": 50
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 27,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 510,
          "OffsetEnd": 510,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 28,
          "LiteralSourceCodeLine": "            if (index > count) revert();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 511,
          "OffsetEnd": 551,
          "Length": 40
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 29,
          "LiteralSourceCodeLine": "            Patients[index].name = name;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 552,
          "OffsetEnd": 592,
          "Length": 40
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 30,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 593,
          "OffsetEnd": 593,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 31,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 594,
          "OffsetEnd": 603,
          "Length": 9
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 32,
          "LiteralSourceCodeLine": "        else revert();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 604,
          "OffsetEnd": 626,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 33,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 627,
          "OffsetEnd": 632,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 34,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 633,
          "OffsetEnd": 633,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 35,
          "LiteralSourceCodeLine": "    function updatePatientStatus(uint index, uint status) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 634,
          "OffsetEnd": 700,
          "Length": 66
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 36,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 701,
          "OffsetEnd": 701,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 37,
          "LiteralSourceCodeLine": "        if (isUser(msg.sender, \"updatePatient\")) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 702,
          "OffsetEnd": 752,
          "Length": 50
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 38,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 753,
          "OffsetEnd": 753,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 39,
          "LiteralSourceCodeLine": "            if (index > count) revert();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 754,
          "OffsetEnd": 794,
          "Length": 40
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 40,
          "LiteralSourceCodeLine": "            Patients[index].status = status;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 795,
          "OffsetEnd": 839,
          "Length": 44
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 41,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 840,
          "OffsetEnd": 840,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 42,
          "LiteralSourceCodeLine": "        }  ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 841,
          "OffsetEnd": 852,
          "Length": 11
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 43,
          "LiteralSourceCodeLine": "        else revert();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 853,
          "OffsetEnd": 875,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 44,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 876,
          "OffsetEnd": 881,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 45,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 882,
          "OffsetEnd": 882,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 46,
          "LiteralSourceCodeLine": "    function createPatient(uint id,string name,uint dateOfBirth,uint social) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 883,
          "OffsetEnd": 968,
          "Length": 85
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 47,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 969,
          "OffsetEnd": 969,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 48,
          "LiteralSourceCodeLine": "        if (isUser(msg.sender, \"createPatient\")) {",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 970,
          "OffsetEnd": 1020,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 49,
          "LiteralSourceCodeLine": "            Patients[count] = Patient(id, name, dateOfBirth, social, pending);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1021,
          "OffsetEnd": 1099,
          "Length": 78
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 50,
          "LiteralSourceCodeLine": "            count++;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1100,
          "OffsetEnd": 1120,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 51,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1121,
          "OffsetEnd": 1130,
          "Length": 9
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 52,
          "LiteralSourceCodeLine": "        else revert();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1131,
          "OffsetEnd": 1153,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 53,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1154,
          "OffsetEnd": 1159,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 54,
          "LiteralSourceCodeLine": "    function getPatientById(uint id) public returns (string) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1160,
          "OffsetEnd": 1222,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 55,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1223,
          "OffsetEnd": 1223,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 56,
          "LiteralSourceCodeLine": "        for (var i=0; i <= count; i++)",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1224,
          "OffsetEnd": 1262,
          "Length": 38
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 57,
          "LiteralSourceCodeLine": "        {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1263,
          "OffsetEnd": 1272,
          "Length": 9
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 58,
          "LiteralSourceCodeLine": "            if (Patients[i].id == id) {",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 1273,
          "OffsetEnd": 1312,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 59,
          "LiteralSourceCodeLine": "                return \"Found patient\";",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1313,
          "OffsetEnd": 1352,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 60,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1353,
          "OffsetEnd": 1366,
          "Length": 13
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 61,
          "LiteralSourceCodeLine": "            else revert(\"Patient not found\");",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1367,
          "OffsetEnd": 1412,
          "Length": 45
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 62,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1413,
          "OffsetEnd": 1422,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 63,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1423,
          "OffsetEnd": 1423,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 64,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1424,
          "OffsetEnd": 1429,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 65,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1430,
          "OffsetEnd": 1431,
          "Length": 1
        }
      ],
      "LineCount": 18,
      "LineCoveredCount": 8,
      "LineCoveragePercent": 44.44,
      "BranchCount": 12,
      "BranchCoveredCount": 2,
      "BranchCoveragePercent": 16.67,
      "FunctionCount": 4,
      "FunctionCoveredCount": 2,
      "FunctionCoveragePercent": 50.0
    }
  ],
  "UnitTestOutcome": [
    [
      {
        "Namespace": "solidity_vscode_unit_test.testContractTests",
        "TestName": "AddUserTransaction",
        "Passed": true,
        "Duration": "00:00:44.3559544"
      }
    ]
  ],
  "LineCount": 32,
  "LineCoveredCount": 18,
  "LineCoveragePercent": 56.25,
  "BranchCount": 18,
  "BranchCoveredCount": 4,
  "BranchCoveragePercent": 22.22,
  "FunctionCount": 10,
  "FunctionCoveredCount": 7,
  "FunctionCoveragePercent": 70.0
}